<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Python 3.9.1 on win32)" generated="20210209 16:57:47.901">
<suite id="s1" name="Group Scenarios" source="C:\Users\demet\PycharmProjects\python_training\rf\group_scenarios.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20210209 16:57:48.003" endtime="20210209 16:57:52.743"></status>
</kw>
<test id="s1-t1" name="Add new group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20210209 16:57:52.745" level="INFO">${old_list} = [2:::, 3:::, 4:nameb5j#!Wk 0:header,S+vo FY[yUt:footerMQ* w=3 ifHN,=!N, 9:testname2:testheader2:testfooter2, 10:name@ ]_&gt;e9 4:header oH5R$LY s):footer~,_v+P }Jj, 14:name,m&amp;*:headerz9j7k@:footer(Db, 16...</msg>
<status status="PASS" starttime="20210209 16:57:52.744" endtime="20210209 16:57:52.746"></status>
</kw>
<kw name="New Group" library="rf.AddressBook">
<arguments>
<arg>name1</arg>
<arg>header1</arg>
<arg>footer1</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20210209 16:57:52.746" level="INFO">${group} = None:name1:header1:footer1</msg>
<status status="PASS" starttime="20210209 16:57:52.746" endtime="20210209 16:57:52.746"></status>
</kw>
<kw name="Create Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20210209 16:57:52.746" endtime="20210209 16:57:56.290"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20210209 16:57:56.292" level="INFO">${new_list} = [2:::, 3:::, 4:nameb5j#!Wk 0:header,S+vo FY[yUt:footerMQ* w=3 ifHN,=!N, 9:testname2:testheader2:testfooter2, 10:name@ ]_&gt;e9 4:header oH5R$LY s):footer~,_v+P }Jj, 14:name,m&amp;*:headerz9j7k@:footer(Db, 16...</msg>
<status status="PASS" starttime="20210209 16:57:56.291" endtime="20210209 16:57:56.293"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20210209 16:57:56.293" endtime="20210209 16:57:56.293"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${old_list}</arg>
<arg>${new_list}</arg>
</arguments>
<status status="PASS" starttime="20210209 16:57:56.293" endtime="20210209 16:57:56.293"></status>
</kw>
<status status="PASS" starttime="20210209 16:57:52.743" endtime="20210209 16:57:56.293" critical="yes"></status>
</test>
<test id="s1-t2" name="Delete Group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20210209 16:57:56.295" level="INFO">${old_list} = [2:::, 3:::, 4:nameb5j#!Wk 0:header,S+vo FY[yUt:footerMQ* w=3 ifHN,=!N, 9:testname2:testheader2:testfooter2, 10:name@ ]_&gt;e9 4:header oH5R$LY s):footer~,_v+P }Jj, 14:name,m&amp;*:headerz9j7k@:footer(Db, 16...</msg>
<status status="PASS" starttime="20210209 16:57:56.294" endtime="20210209 16:57:56.295"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20210209 16:57:56.295" level="INFO">Length is 138</msg>
<msg timestamp="20210209 16:57:56.295" level="INFO">${len} = 138</msg>
<status status="PASS" starttime="20210209 16:57:56.295" endtime="20210209 16:57:56.295"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20210209 16:57:56.298" level="INFO">${index} = 127</msg>
<status status="PASS" starttime="20210209 16:57:56.296" endtime="20210209 16:57:56.298"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20210209 16:57:56.299" level="INFO">${group} = 152:nameoX(eFTYU:header:footer</msg>
<status status="PASS" starttime="20210209 16:57:56.299" endtime="20210209 16:57:56.299"></status>
</kw>
<kw name="Delete Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20210209 16:57:56.299" endtime="20210209 16:57:56.504"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20210209 16:57:56.506" level="INFO">${new_list} = [2:::, 3:::, 4:nameb5j#!Wk 0:header,S+vo FY[yUt:footerMQ* w=3 ifHN,=!N, 9:testname2:testheader2:testfooter2, 10:name@ ]_&gt;e9 4:header oH5R$LY s):footer~,_v+P }Jj, 14:name,m&amp;*:headerz9j7k@:footer(Db, 16...</msg>
<status status="PASS" starttime="20210209 16:57:56.505" endtime="20210209 16:57:56.506"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20210209 16:57:56.506" endtime="20210209 16:57:56.507"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${old_list}</arg>
<arg>${new_list}</arg>
</arguments>
<status status="PASS" starttime="20210209 16:57:56.507" endtime="20210209 16:57:56.507"></status>
</kw>
<status status="PASS" starttime="20210209 16:57:56.293" endtime="20210209 16:57:56.507" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20210209 16:57:56.507" endtime="20210209 16:57:58.671"></status>
</kw>
<status status="PASS" starttime="20210209 16:57:47.902" endtime="20210209 16:57:58.671"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Group Scenarios">Group Scenarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
