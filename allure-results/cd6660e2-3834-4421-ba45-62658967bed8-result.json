{"name": "test_add_contact[None:firstnamem6I0s*:lastnameVk:middlenamec\\Kf\\n Y<4mEX :1@1.ySw:m?}:7&$98]", "status": "failed", "statusDetails": {"message": "AssertionError: assert (67 + 1) == 67\n +  where 67 = len([23:::None:None:None, 59:::None:None:None, 71:::None:None:None, 75:::None:None:None, 79:::None:None:None, 83:::None:None:None, ...])\n +  and   67 = <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x0000014DD1830370>>()\n +    where <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x0000014DD1830370>> = <fixture.contact.ContactHelper object at 0x0000014DD1830370>.count\n +      where <fixture.contact.ContactHelper object at 0x0000014DD1830370> = <fixture.application.Application object at 0x0000014DD1813340>.contact", "trace": "app = <fixture.application.Application object at 0x0000014DD1813340>, json_contacts = None:firstnamem6I0s*:lastnameVk:middlenamec\\Kf\\n Y<4mEX :1@1.ySw:m?}:7&$98\n\n    def test_add_contact(app, json_contacts):\n        contact = json_contacts\n        with allure.step('Given a contact list'):\n            old_contacts = app.contact.get_contact_list()\n        with allure.step('When I add the contact %s to the list' % contact):\n            app.contact.create(contact)\n        with allure.step('Then the new contact list is equal to the old list with the added contact'):\n>           assert len(old_contacts) + 1 == app.contact.count()\nE           assert (67 + 1) == 67\nE            +  where 67 = len([23:::None:None:None, 59:::None:None:None, 71:::None:None:None, 75:::None:None:None, 79:::None:None:None, 83:::None:None:None, ...])\nE            +  and   67 = <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x0000014DD1830370>>()\nE            +    where <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x0000014DD1830370>> = <fixture.contact.ContactHelper object at 0x0000014DD1830370>.count\nE            +      where <fixture.contact.ContactHelper object at 0x0000014DD1830370> = <fixture.application.Application object at 0x0000014DD1813340>.contact\n\ntest\\test_add_contact.py:13: AssertionError"}, "steps": [{"name": "Given a contact list", "status": "passed", "start": 1612880528860, "stop": 1612880532446}, {"name": "When I add the contact None:firstnamem6I0s*:lastnameVk:middlenamec\\Kf\\n Y<4mEX :1@1.ySw:m?}:7&$98 to the list", "status": "passed", "start": 1612880532446, "stop": 1612880533837}, {"name": "Then the new contact list is equal to the old list with the added contact", "status": "failed", "statusDetails": {"message": "AssertionError: assert (67 + 1) == 67\n +  where 67 = len([23:::None:None:None, 59:::None:None:None, 71:::None:None:None, 75:::None:None:None, 79:::None:None:None, 83:::None:None:None, ...])\n +  and   67 = <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x0000014DD1830370>>()\n +    where <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x0000014DD1830370>> = <fixture.contact.ContactHelper object at 0x0000014DD1830370>.count\n +      where <fixture.contact.ContactHelper object at 0x0000014DD1830370> = <fixture.application.Application object at 0x0000014DD1813340>.contact\n", "trace": "  File \"C:\\Users\\demet\\PycharmProjects\\python_training\\test\\test_add_contact.py\", line 13, in test_add_contact\n    assert len(old_contacts) + 1 == app.contact.count()\n"}, "start": 1612880533837, "stop": 1612880533849}], "parameters": [{"name": "json_contacts", "value": "None:firstnamem6I0s*:lastnameVk:middlenamec\\Kf\\n Y<4mEX :1@1.ySw:m?}:7&$98"}], "start": 1612880528860, "stop": 1612880533849, "uuid": "8757c440-6dbe-41cb-bf74-95b58e895a6d", "historyId": "360ce9d8c4334970563dfee5635bc2e1", "testCaseId": "d50430283b9a81430c4a119910d45520", "fullName": "test.test_add_contact#test_add_contact", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_contact"}, {"name": "host", "value": "H1d3Me"}, {"name": "thread", "value": "5592-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_contact"}]}