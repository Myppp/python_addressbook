{"name": "test_add_group[None:name3 3UZE:header':footer 6$HY 9 LkudEQzf7E]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [2:::, 3:::, ...j, 12:::, ...] == [2:::, 3:::, ...j, 12:::, ...]\n  Left contains one more item: None:name3 3UZE:header':footer 6$HY 9 LkudEQzf7E\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x000001574BD1A580>, db = <fixture.db.DbFixture object at 0x000001574BD1A160>, json_groups = None:name3 3UZE:header':footer 6$HY 9 LkudEQzf7E\n\n    def test_add_group(app, db, json_groups):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [2:::, 3:::, ...j, 12:::, ...] == [2:::, 3:::, ...j, 12:::, ...]\nE             Left contains one more item: None:name3 3UZE:header':footer 6$HY 9 LkudEQzf7E\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1612873349707, "stop": 1612873349708}, {"name": "When I add a group None:name3 3UZE:header':footer 6$HY 9 LkudEQzf7E to the list", "status": "passed", "start": 1612873349708, "stop": 1612873353138}, {"name": "Then the new group list is equal to the old list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [2:::, 3:::, ...j, 12:::, ...] == [2:::, 3:::, ...j, 12:::, ...]\n  Left contains one more item: None:name3 3UZE:header':footer 6$HY 9 LkudEQzf7E\n  Use -v to get the full diff\n", "trace": "  File \"C:\\Users\\demet\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1612873353138, "stop": 1612873353140}], "parameters": [{"name": "json_groups", "value": "None:name3 3UZE:header':footer 6$HY 9 LkudEQzf7E"}], "start": 1612873349706, "stop": 1612873353140, "uuid": "e84868c2-ef10-401b-a9f4-1e5ee4a14fdc", "historyId": "4cdfe3ecf7e8f124a13dad7557fb07c4", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "H1d3Me"}, {"name": "thread", "value": "20116-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}